syntax = "proto3";

package fusion.discoveryx.server.protocol;

import "google/protobuf/wrappers.proto";
import "scalapb/scalapb.proto";
import "fusion/define.proto";
import "fusion/discoveryx/model/discoveryx.proto";

option (scalapb.options) = {
  collection_type: "scala.collection.immutable.Seq"
};

// #Namespace
// 命名空间
message Namespace {
    option (scalapb.message).extends = "fusion.discoveryx.server.management.Management.Event";

    // ID
    string namespace = 1;
    // 名称
    string name = 2;
    // 描述
    string description = 3;
    // 配置数
    int32 config_count = 4;
}
// #Namespace

// #CreateNamespace
message CreateNamespace {
    string name = 1;
    // 描述
    string description = 2;
}
// #CreateNamespace

// #ListNamespace
message ListNamespace {
    int32 page = 1;
    int32 size = 2;
}
// #ListNamespace

// #RemoveNamespace
message RemoveNamespace {
    option (scalapb.message).extends = "fusion.discoveryx.server.management.Management.Event";

    string namespace = 1;
}
// #RemoveNamespace

// #ModifyNamespace
message ModifyNamespace {
    option (scalapb.message).extends = "fusion.discoveryx.server.management.Management.Event";

    string namespace = 1;
    google.protobuf.StringValue name = 2;
    // 描述
    google.protobuf.StringValue description = 3;
}
// #ModifyNamespace

// #ListedNamespace
message ListedNamespace {
    repeated Namespace namespaces = 1;
    int32 page = 2;
    int32 size = 3;
    int32 total_elements = 4;
}
// #ListedNamespace

message GetNamespace {
    string namespace = 1;
}

message ConfigSizeChangeEvent {
    option (scalapb.message).extends = "fusion.discoveryx.server.management.Management.Command";
    option (scalapb.message).extends = "fusion.discoveryx.server.management.Management.Event";

    string namespace = 1;
    int32 config_count = 2;
}

message ManagementCommand {
    option (scalapb.message).extends = "fusion.discoveryx.server.management.Management.Command";
    option (scalapb.message).companion_extends = "fusion.protobuf.ActorRefCompanion";

    string reply_to = 1 [(scalapb.field).type = "akka.actor.typed.ActorRef[ManagementResponse]"];
    oneof cmd {
        CreateNamespace create = 2;
        ListNamespace list = 3;
        ModifyNamespace modify = 4;
        RemoveNamespace remove = 5;
        GetNamespace get = 6;
    }
}

// #ManagementResponse
message ManagementResponse {
    int32 status = 1;
    string message = 2;
    oneof data {
        Namespace namespace = 3;
        ListedNamespace listed = 4;
    }
}
// #ManagementResponse

message ManagementState {
    repeated Namespace namespaces = 1 [(scalapb.field).collection_type = "Vector"];
}
