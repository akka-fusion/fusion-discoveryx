syntax = "proto3";
package fusion.discoveryx.server.protocol;

import "google/protobuf/wrappers.proto";
import "scalapb/scalapb.proto";
import "fusion/define.proto";
import "fusion/discoveryx/model/discoveryx.proto";

option (scalapb.options) = {
  collection_type: "scala.collection.immutable.Seq"
};

message NamingServiceKey {
    string namespace = 1;
    string serviceName = 2;
}

message NamingReplyCommand {
    option (scalapb.message).extends = "fusion.discoveryx.server.naming.NamingEntity.Command";
    option (scalapb.message).companion_extends = "fusion.protobuf.ActorRefCompanion";

    string reply_to = 1 [(scalapb.field).type = "akka.actor.typed.ActorRef[fusion.discoveryx.model.NamingReply]"];
    oneof cmd {
        fusion.discoveryx.model.InstanceRegister register = 2;
        fusion.discoveryx.model.InstanceQuery query = 3;
        fusion.discoveryx.model.InstanceRemove remove = 4;
        fusion.discoveryx.model.InstanceModify modify = 5;
        CreateService create_service = 6;
        ModifyService modify_service = 7;
        RemoveService remove_service = 8;
    }
}

message Heartbeat {
    option (scalapb.message).extends = "fusion.discoveryx.server.naming.NamingEntity.Command";
    string namespace = 1;
    string service_name = 2;
    string instance_id = 3;
}

message QueryServiceInfo {
    option (scalapb.message).extends = "fusion.discoveryx.server.naming.NamingEntity.Command";
    option (scalapb.message).companion_extends = "fusion.protobuf.ActorRefCompanion";
    string reply_to = 1 [(scalapb.field).type = "akka.actor.typed.ActorRef[fusion.discoveryx.model.ServiceInfo]"];
}

////////////////////////////////////////////////////////////////////////////////
// NamingManager 使用
////////////////////////////////////////////////////////////////////////////////

// 通过 PubSub 发布 fusion.discoveryx.server.naming.NamingEntity 自身的 ActorRef，并注册到 NamingManager
message NamingRegisterToManager {
    option (scalapb.message).extends = "fusion.discoveryx.server.naming.NamingManager.Command";
    option (scalapb.message).companion_extends = "fusion.protobuf.ActorRefCompanion";
    string naming_ref = 1 [(scalapb.field).type = "akka.actor.typed.ActorRef[fusion.discoveryx.server.naming.NamingEntity.Command]"];
}

// #ListService
message ListService {
    string namespace = 1;
    int32 page = 2;
    int32 size = 3;
    string service_name = 4;
}
// #ListService

// #ListedService
message ListedService {
    repeated fusion.discoveryx.model.ServiceInfo service_infos = 1;
    int32 page = 2;
    int32 size = 3;
    int32 total_elements = 4;
}
// #ListedService

// #GetService
message GetService {
    string namespace = 1;
    string service_name = 2;
}
// #GetService

// #CreateService
message CreateService {
    string namespace = 1;
    string service_name = 2;
}
// #CreateService

// #RemoveService
message RemoveService {
    string namespace = 1;
    string service_name = 2;
}
// #RemoveService

// #ModifyService
message ModifyService {
    string namespace = 1;
    string service_name = 2;
    google.protobuf.StringValue group_name = 3;
}
// #ModifyService

message NamingManagerCommand {
    option (scalapb.message).extends = "fusion.discoveryx.server.naming.NamingManager.Command";
    option (scalapb.message).companion_extends = "fusion.protobuf.ActorRefCompanion";

    string reply_to = 1 [(scalapb.field).type = "akka.actor.typed.ActorRef[NamingResponse]"];
    oneof cmd {
        ListService list_service = 2;
        GetService get_service = 3;
        CreateService create_service = 4;
        RemoveService remove_service = 5;
        ModifyService modify_service = 6;
    }
}

// #NamingResponse
message NamingResponse {
    int32 status = 1;
    string message = 2;
    oneof data {
        ListedService listed_service = 3;
        fusion.discoveryx.model.ServiceInfo service_info = 4;
        fusion.discoveryx.model.Instance instance = 5;
    }
}
// #NamingResponse
