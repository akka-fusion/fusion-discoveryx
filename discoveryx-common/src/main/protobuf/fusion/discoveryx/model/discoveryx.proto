syntax = "proto3";
package fusion.discoveryx.model;

import "google/protobuf/wrappers.proto";
import "google/protobuf/any.proto";
import "scalapb/scalapb.proto";
import "fusion/define.proto";

option (scalapb.options) = {
  collection_type: "scala.collection.immutable.Seq"
};

message ServerStatusQuery {
}
message ServerStatusBO {
    int32 status = 1;
}

////////////////////////////////////////////////////////////////////////////////
// Config
////////////////////////////////////////////////////////////////////////////////

// #ConfigGet
message ConfigGet {
    string namespace = 1;
    string data_id = 2;
}
// #ConfigGet

// #ConfigQueried
// #ConfigType
enum ConfigType {
    TEXT = 0;
    HOCON = 1;
    JSON = 2;
    YAML = 3;
    PROPERTIES = 4;
    INI = 5;
}
// #ConfigType

// #ConfigItem
message ConfigItem {
    string namespace = 1;
    string data_id = 2;
    string group_name = 3;
    string content = 4;
    ConfigType type = 5;
}
message ConfigQueried {
    repeated ConfigItem configs = 1;
}
// #ConfigItem
// #ConfigQueried

// #ConfigPublish
message ConfigPublish {
    string namespace = 1;
    string data_id = 2;
    string group_name = 3;
    string content = 4;
    ConfigType type = 5;
}
message ConfigPublished {
    string version = 1;
    google.protobuf.StringValue old_content = 2;
}
// #ConfigPublish

// #ConfigRemove
message ConfigRemove {
    string namespace = 1;
    string data_id = 2;
}
// #ConfigRemove

// #ConfigChangeListen
message ConfigChangeListen {
    string namespace = 1;
    string data_id = 2;
}
// #ConfigChangeListen

// #ConfigChanged
message ConfigChanged {
    fusion.discoveryx.model.ConfigItem config = 1 [(scalapb.field).no_box = true];
    fusion.discoveryx.model.ConfigItem old = 2;
    int32 version = 3;
    bool exit = 4;
    int32 change_type = 7; // 1: add, 2: update, 3: delete
}
// #ConfigChanged

// #ConfigReply
message ConfigReply {
    int32 status = 1;
    string message = 2;
    oneof data {
        ConfigItem config = 3;
        ConfigQueried queried = 4;
        ConfigPublished published = 5;
    }
}
// #ConfigReply

////////////////////////////////////////////////////////////////////////////////
// Instance
////////////////////////////////////////////////////////////////////////////////

// #Instance
message Instance {
    // unique id of this instance.
    string instance_id = 1;
    // Service information of instance
    string namespace = 2;
    string service_name = 3;
    string group_name = 4;
    // instance ip
    string ip = 5;
    // instance port
    int32 port = 6;
    // instance weight
    double weight = 7;
    // instance health status
    bool healthy = 8;
    // If instance is enabled to accept request
    bool enabled = 9;
    // user extended attributes
    map<string, string> metadata = 10;
}
// #Instance

// #InstanceRegister
message InstanceRegister {
    string namespace = 1;
    string service_name = 2;
    string group_name = 3;
    string ip = 4;
    int32 port = 5;
    // instance weight
    double weight = 6;
    // instance health status
    bool health = 7;
    // If instance is enabled to accept request
    bool enable = 8;
    // user extended attributes
    map<string, string> metadata = 9;
}
// #InstanceRegister

// #InstanceModify
message InstanceModify {
    string namespace = 1;
    string service_name = 2;
    string instance_id = 3;
    google.protobuf.StringValue group_name = 4;
    google.protobuf.StringValue ip = 5;
    google.protobuf.Int32Value port = 6;
    // instance weight
    google.protobuf.DoubleValue weight = 7;
    // instance health status
    google.protobuf.BoolValue health = 8;
    // If instance is enabled to accept request
    google.protobuf.BoolValue enable = 9;
    // user extended attributes
    map<string, string> metadata = 10;
    // trueï¼šreplace old metadata, false: merge old metadata
    bool replace_metadata = 11;
}
// #InstanceModify

// #InstanceRemove
message InstanceRemove {
    string namespace = 1;
    string service_name = 2;
    string instance_id = 3;
}
// #InstanceRemove

// #InstanceQuery
message InstanceQuery {
    string namespace = 1;
    string service_name = 2;
    string group_name = 3;
    // only return all healthy instances
    bool all_healthy = 4;
    // only return one healthy instance
    bool one_healthy = 5;
}
message InstanceQueryResult {
    repeated Instance instances = 2;
}
// #InstanceQuery

// #InstanceHeartbeat
message InstanceHeartbeat {
}
// #InstanceHeartbeat

// #NamingReply
message NamingReply {
    int32 status = 1;
    string message = 2;
    oneof data {
        InstanceQueryResult queried = 3;
        Instance instance = 4;
    }
}
// #NamingReply
