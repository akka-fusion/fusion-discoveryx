{"docs":[{"location":"/paradox.json","text":"","title":""},{"location":"/index.html","text":"","title":"Fusion DiscoveryX"},{"location":"/index.html#fusion-discoveryx","text":"服务注册与发现管理系统，基于Akka生态开发。\n产品文档：https://akka-fusion.github.io/fusion-discoveryx/\n介绍 技术 API 目录 开放API 管理API JSON 说明 版本","title":"Fusion DiscoveryX"},{"location":"/intro.html","text":"","title":"介绍"},{"location":"/intro.html#介绍","text":"Fusion DiscoveryX 成长于作者对 Akka 生态的学习，API上参考了Nacos的某些设计。\n服务注册与发现管理系统，基于Akka生态开发。","title":"介绍"},{"location":"/intro.html#技术","text":"功能 使用技术 开放API Akka gRPC 集群序例化 Protobuf 配置持久化 Akka Persistence 容错与扩展 Akka Cluster Sharding REST Akka HTTP","title":"技术"},{"location":"/api/index.html","text":"","title":"API"},{"location":"/api/index.html#api","text":"","title":"API"},{"location":"/api/index.html#目录","text":"开放API 目录 Config（配置管理） QueryConfig 查询配置 PublishConfig 发布配置 RemoveConfig 删除配置 ListenerConfig 监听配置变化 Naming（服务发现） RegisterInstance 注册实例 RemoveInstance 删除实例 QueryInstance 查询实例 ModifyInstance 修改实例 Heartbeat 实例心跳 gRPC服务描述定义文件 管理API 目录 Config Manager 配置管理服务 ListConfig 查询配置列表 GetConfig 查询单个配置 PublishConfig 发布配置 RemoveConfig 删除配置 Naming Manager 名称管理服务 ListService 查询服务列表 GetService 查询单个服务 RemoveInstance 删除实例 ModifyInstance 编辑实例 gRPC服务描述定义文件 JSON 说明 Protobuf、JSON转换说明 示例","title":"目录"},{"location":"/api/open/index.html","text":"","title":"开放API"},{"location":"/api/open/index.html#开放api","text":"Fusion DiscoveryX开放API提供了配置发布、获取、管理和服务注册、负载均衡等API，提供了gRPC和REST两种实现。","title":"开放API"},{"location":"/api/open/index.html#目录","text":"Config（配置管理） QueryConfig 查询配置 PublishConfig 发布配置 RemoveConfig 删除配置 ListenerConfig 监听配置变化 Naming（服务发现） RegisterInstance 注册实例 Instance RemoveInstance 删除实例 QueryInstance 查询实例 ModifyInstance 修改实例 Heartbeat 实例心跳 gRPC服务描述定义文件","title":"目录"},{"location":"/api/open/config.html","text":"","title":"Config（配置管理）"},{"location":"/api/open/config.html#config-配置管理-","text":"gRPC服务地址：/fusion.discoveryx.grpc.ConfigService REST URL前缀：/fusion/discoveryx/v1/config\nREST URL路径由 REST URL前缀 + 服务名组织，均使用 POST 方法的请求，JSON序例化格式。如查询配置接口访问地址为：POST /fusion/discoveryx/v1/config/QueryConfig。Protobuf与JSON格式转换请参阅： JSON 说明。","title":"Config（配置管理）"},{"location":"/api/open/config.html#queryconfig-查询配置","text":"gRPC\n// 查询配置\nrpc QueryConfig (fusion.discoveryx.model.ConfigGet) returns (fusion.discoveryx.model.ConfigReply) {\n}\n请求\nmessage ConfigGet {\n    string namespace = 1;\n    string data_id = 2;\n}\n响应\nmessage ConfigReply {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        ConfigItem config = 3;\n        ConfigQueried queried = 4;\n    }\n}\noneof的queried字段将返回已注册实例信息，如下：\nenum ConfigType {\n    TEXT = 0;\n    HOCON = 1;\n    JSON = 2;\n    YAML = 3;\n    PROPERTIES = 4;\n    INI = 5;\n}\n\nmessage ConfigBasic {\n    string data_id = 1;\n    string group_name = 2;\n    ConfigType type = 3;\n}\nmessage ConfigQueried {\n    repeated ConfigBasic configs = 1;\n    string namespace = 2;\n}","title":"QueryConfig 查询配置"},{"location":"/api/open/config.html#publishconfig-发布配置","text":"gRPC\n// 发布配置\nrpc PublishConfig (fusion.discoveryx.model.ConfigItem) returns (fusion.discoveryx.model.ConfigReply) {\n}\n请求\nmessage ConfigItem {\n    string namespace = 1;\n    string data_id = 2;\n    string group_name = 3;\n    string content = 4;\n    ConfigType type = 5;\n}\n响应\nmessage ConfigReply {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        ConfigItem config = 3;\n        ConfigQueried queried = 4;\n    }\n}","title":"PublishConfig 发布配置"},{"location":"/api/open/config.html#removeconfig-删除配置","text":"gRPC\n// 删除配置\nrpc RemoveConfig (fusion.discoveryx.model.ConfigRemove) returns (fusion.discoveryx.model.ConfigReply) {\n}\n请求\nmessage ConfigRemove {\n    string namespace = 1;\n    string data_id = 2;\n}\n响应\nmessage ConfigReply {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        ConfigItem config = 3;\n        ConfigQueried queried = 4;\n    }\n}","title":"RemoveConfig 删除配置"},{"location":"/api/open/config.html#listenerconfig-监听配置变化","text":"gRPC\n// 监听配置变化\nrpc ListenerConfig (fusion.discoveryx.model.ConfigChangeListen) returns (stream fusion.discoveryx.model.ConfigChanged) {\n}\n请求\nmessage ConfigChangeListen {\n    string namespace = 1;\n    string data_id = 2;\n}\n响应\nmessage ConfigChanged {\n    fusion.discoveryx.model.ConfigItem config = 1;\n    int32 version = 2;\n    ChangeType change_type = 3;\n}\nenum ChangeType {\n    // 保存\n    CHANGE_SAVE = 0;\n    // 添加\n    CHANGE_ADD = 1;\n    // 删除\n    CHANGE_REMOVE = 2;\n}","title":"ListenerConfig 监听配置变化"},{"location":"/api/open/naming.html","text":"","title":"Naming（服务发现）"},{"location":"/api/open/naming.html#naming-服务发现-","text":"gRPC服务地址：/fusion.discoveryx.grpc.NamingService REST URL前缀：/fusion/discoveryx/v1/naming\nREST URL路径由 REST URL前缀 + 服务名组织，均使用 POST 方法的请求，JSON序例化格式。如查询实例接口访问地址为：POST /fusion/discoveryx/v1/naming/QueryInstance。Protobuf与JSON格式转换请参阅： JSON 说明。","title":"Naming（服务发现）"},{"location":"/api/open/naming.html#registerinstance-注册实例","text":"gRPC\n// 注册实例\nrpc RegisterInstance (fusion.discoveryx.model.InstanceRegister) returns (fusion.discoveryx.model.NamingReply) {\n}\n请求\nmessage InstanceRegister {\n    string namespace = 1;\n    string service_name = 2;\n    string group_name = 3;\n    string ip = 4;\n    int32 port = 5;\n    // instance weight\n    double weight = 6;\n    // instance health status\n    bool health = 7;\n    // If instance is enabled to accept request\n    bool enable = 8;\n    // If instance is ephemeral\n    bool ephemeral = 9;\n    // user extended attributes\n    map<string, string> metadata = 10;\n}\n响应\nmessage NamingReply {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        InstanceQueryResult queried = 3;\n        Instance instance = 4;\n    }\n}","title":"RegisterInstance 注册实例"},{"location":"/api/open/naming.html#instance","text":"oneof的instance字段将返回已注册实例信息，如下：\nmessage Instance {\n    // unique id of this instance.\n    string instance_id = 1;\n    // Service information of instance\n    string namespace = 2;\n    string service_name = 3;\n    string group_name = 4;\n    // instance ip\n    string ip = 5;\n    // instance port\n    int32 port = 6;\n    // instance weight\n    double weight = 7;\n    // instance health status\n    bool healthy = 8;\n    // If instance is enabled to accept request\n    bool enabled = 9;\n    // If instance is ephemeral\n    bool ephemeral = 10;\n    // user extended attributes\n    map<string, string> metadata = 11;\n}","title":"Instance"},{"location":"/api/open/naming.html#removeinstance-删除实例","text":"gRPC\n// 删除实例\nrpc RemoveInstance (fusion.discoveryx.model.InstanceRemove) returns (fusion.discoveryx.model.NamingReply) {\n}\n请求\nmessage InstanceRemove {\n    string namespace = 1;\n    string service_name = 2;\n    string instance_id = 3;\n}\n响应\n删除实例没有oneof字段返回。\nmessage NamingReply {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        InstanceQueryResult queried = 3;\n        Instance instance = 4;\n    }\n}","title":"RemoveInstance 删除实例"},{"location":"/api/open/naming.html#queryinstance-查询实例","text":"gRPC\n// 查询实例\nrpc QueryInstance (fusion.discoveryx.model.InstanceQuery) returns (fusion.discoveryx.model.NamingReply) {\n}\n请求\nmessage InstanceQuery {\n    string namespace = 1;\n    string service_name = 2;\n    string group_name = 3;\n    // only return all healthy instances\n    bool all_healthy = 4;\n    // only return one healthy instance\n    bool one_healthy = 5;\n}\nmessage InstanceQueryResult {\n    repeated Instance instances = 2;\n}\n响应\nmessage NamingReply {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        InstanceQueryResult queried = 3;\n        Instance instance = 4;\n    }\n}\n查询成功oneof通过queried字段将查询匹配到的实例返回：","title":"QueryInstance 查询实例"},{"location":"/api/open/naming.html#modifyinstance-修改实例","text":"gRPC\n// 修改实例\nrpc ModifyInstance (fusion.discoveryx.model.InstanceModify) returns (fusion.discoveryx.model.NamingReply) {\n}\n请求\nmessage InstanceModify {\n    string namespace = 1;\n    string service_name = 2;\n    string instance_id = 3;\n    google.protobuf.StringValue group_name = 4;\n    google.protobuf.StringValue ip = 5;\n    google.protobuf.Int32Value port = 6;\n    // instance weight\n    google.protobuf.DoubleValue weight = 7;\n    // instance health status\n    google.protobuf.BoolValue health = 8;\n    // If instance is enabled to accept request\n    google.protobuf.BoolValue enable = 9;\n    // user extended attributes\n    map<string, string> metadata = 10;\n    // true：replace old metadata, false: merge old metadata\n    bool replace_metadata = 11;\n}\n响应\nmessage NamingReply {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        InstanceQueryResult queried = 3;\n        Instance instance = 4;\n    }\n}\noneof的instance字段将返回修改后的实例信息。","title":"ModifyInstance 修改实例"},{"location":"/api/open/naming.html#heartbeat-实例心跳","text":"gRPC\n// 实例心跳消息。namespace, serviceName, ip, port, instanceId等使用metadata（HTTP Header发送）\n//- `x-discoveryx-namespace`：命名空间\n//- `x-discoveryx-service-name`：服务名\n//- `x-discoveryx-ip`：服务监听IP地址\n//- `x-discoveryx-port`：服务监听网络端口\n//- `x-discoveryx-instance-id`：实例ID\nrpc Heartbeat (stream fusion.discoveryx.model.InstanceHeartbeat) returns (stream fusion.discoveryx.model.ServerStatusBO) {\n}\nHeartbeat接口第一次调用时需要通过metadata（HTTP Header）传递以下内容：\nx-discoveryx-namespace：命名空间 x-discoveryx-service-name：服务名 x-discoveryx-ip：服务监听IP地址 x-discoveryx-port：服务监听网络端口 x-discoveryx-instance-id：实例ID","title":"Heartbeat 实例心跳"},{"location":"/api/open/grpc.html","text":"","title":"gRPC服务描述定义文件"},{"location":"/api/open/grpc.html#grpc服务描述定义文件","text":"syntax = \"proto3\";\npackage fusion.discoveryx.grpc;\n\nimport \"fusion/discoveryx/model/discoveryx.proto\";\n\nservice ConfigService {\n    // 查询服务状态\n    rpc ServerStatus (fusion.discoveryx.model.ServerStatusQuery) returns (fusion.discoveryx.model.ServerStatusBO) {\n    }\n\n    // 查询配置\n    rpc QueryConfig (fusion.discoveryx.model.ConfigGet) returns (fusion.discoveryx.model.ConfigReply) {\n    }\n\n    // 发布配置\n    rpc PublishConfig (fusion.discoveryx.model.ConfigItem) returns (fusion.discoveryx.model.ConfigReply) {\n    }\n\n    // 删除配置\n    rpc RemoveConfig (fusion.discoveryx.model.ConfigRemove) returns (fusion.discoveryx.model.ConfigReply) {\n    }\n\n    // 监听配置变化\n    rpc ListenerConfig (fusion.discoveryx.model.ConfigChangeListen) returns (stream fusion.discoveryx.model.ConfigChanged) {\n    }\n}\n\nservice NamingService {\n    // 查询实例\n    rpc QueryInstance (fusion.discoveryx.model.InstanceQuery) returns (fusion.discoveryx.model.NamingReply) {\n    }\n\n    // 注册实例\n    rpc RegisterInstance (fusion.discoveryx.model.InstanceRegister) returns (fusion.discoveryx.model.NamingReply) {\n    }\n\n    // 修改实例\n    rpc ModifyInstance (fusion.discoveryx.model.InstanceModify) returns (fusion.discoveryx.model.NamingReply) {\n    }\n\n    // 删除实例\n    rpc RemoveInstance (fusion.discoveryx.model.InstanceRemove) returns (fusion.discoveryx.model.NamingReply) {\n    }\n\n    // 实例心跳消息。namespace, serviceName, ip, port, instanceId等使用metadata（HTTP Header发送）\n    //- `x-discoveryx-namespace`：命名空间\n    //- `x-discoveryx-service-name`：服务名\n    //- `x-discoveryx-ip`：服务监听IP地址\n    //- `x-discoveryx-port`：服务监听网络端口\n    //- `x-discoveryx-instance-id`：实例ID\n    rpc Heartbeat (stream fusion.discoveryx.model.InstanceHeartbeat) returns (stream fusion.discoveryx.model.ServerStatusBO) {\n    }\n\n    // 查询服务状态\n    rpc ServerStatus (fusion.discoveryx.model.ServerStatusQuery) returns (fusion.discoveryx.model.ServerStatusBO) {\n    }\n}","title":"gRPC服务描述定义文件"},{"location":"/api/management/index.html","text":"","title":"管理API"},{"location":"/api/management/index.html#管理api","text":"管理API为Fusion DiscoveryX提供了Web控制台使用的访问接口","title":"管理API"},{"location":"/api/management/index.html#目录","text":"Config Manager 配置管理服务 ListConfig 查询配置列表 GetConfig 查询单个配置 PublishConfig 发布配置 RemoveConfig 删除配置 Naming Manager 名称管理服务 ListService 查询服务列表 GetService 查询单个服务 RemoveInstance 删除实例 ModifyInstance 编辑实例 gRPC服务描述定义文件","title":"目录"},{"location":"/api/management/config.html","text":"","title":"Config Manager 配置管理服务"},{"location":"/api/management/config.html#config-manager-配置管理服务","text":"gRPC服务地址：/fusion.discoveryx.server.grpc.ConfigManagerService REST URL前缀：/fusion/discoveryx/management/config\nREST URL路径由 REST URL前缀 + 服务名组织，均使用 POST 方法的请求，JSON序例化格式。如查询配置列表接口访问地址为：POST /fusion/discoveryx/management/config/ListConfig。Protobuf与JSON格式转换请参阅： JSON 说明。","title":"Config Manager 配置管理服务"},{"location":"/api/management/config.html#listconfig-查询配置列表","text":"gRPC\n// 查询配置列表（不返回配置内容）\nrpc ListConfig (fusion.discoveryx.server.protocol.ListConfig) returns (fusion.discoveryx.server.protocol.ConfigResponse) {\n}\n请求\nmessage ListConfig {\n    string namespace = 1;\n    google.protobuf.StringValue data_id = 2;\n    google.protobuf.StringValue group_name = 3;\n    int32 page = 4;\n    int32 size = 5;\n}\n响应\nmessage ConfigResponse {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        fusion.discoveryx.model.ConfigQueried listed = 3;\n        fusion.discoveryx.model.ConfigItem config = 4;\n    }\n}\noneof字段listed有效：\nenum ConfigType {\n    TEXT = 0;\n    HOCON = 1;\n    JSON = 2;\n    YAML = 3;\n    PROPERTIES = 4;\n    INI = 5;\n}\n\nmessage ConfigBasic {\n    string data_id = 1;\n    string group_name = 2;\n    ConfigType type = 3;\n}\nmessage ConfigQueried {\n    repeated ConfigBasic configs = 1;\n    string namespace = 2;\n}","title":"ListConfig 查询配置列表"},{"location":"/api/management/config.html#getconfig-查询单个配置","text":"gRPC\n// 查询单个配置\nrpc GetConfig (fusion.discoveryx.model.ConfigGet) returns (fusion.discoveryx.server.protocol.ConfigResponse) {\n}\n请求\nmessage ConfigGet {\n    string namespace = 1;\n    string data_id = 2;\n}\n响应\nmessage ConfigResponse {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        fusion.discoveryx.model.ConfigQueried listed = 3;\n        fusion.discoveryx.model.ConfigItem config = 4;\n    }\n}\noneof字段config有效：\nmessage ConfigItem {\n    string namespace = 1;\n    string data_id = 2;\n    string group_name = 3;\n    string content = 4;\n    ConfigType type = 5;\n}","title":"GetConfig 查询单个配置"},{"location":"/api/management/config.html#publishconfig-发布配置","text":"gRPC\n// 发布配置\nrpc PublishConfig (fusion.discoveryx.model.ConfigItem) returns (fusion.discoveryx.server.protocol.ConfigResponse) {\n}\n请求\nmessage ConfigItem {\n    string namespace = 1;\n    string data_id = 2;\n    string group_name = 3;\n    string content = 4;\n    ConfigType type = 5;\n}\n响应\nmessage ConfigResponse {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        fusion.discoveryx.model.ConfigQueried listed = 3;\n        fusion.discoveryx.model.ConfigItem config = 4;\n    }\n}\noneof字段config有效：\nmessage ConfigItem {\n    string namespace = 1;\n    string data_id = 2;\n    string group_name = 3;\n    string content = 4;\n    ConfigType type = 5;\n}","title":"PublishConfig 发布配置"},{"location":"/api/management/config.html#removeconfig-删除配置","text":"gRPC\n// 删除配置\nrpc RemoveConfig (fusion.discoveryx.model.ConfigRemove) returns (fusion.discoveryx.server.protocol.ConfigResponse) {\n}\n请求\nmessage ConfigRemove {\n    string namespace = 1;\n    string data_id = 2;\n}\n响应\nmessage ConfigResponse {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        fusion.discoveryx.model.ConfigQueried listed = 3;\n        fusion.discoveryx.model.ConfigItem config = 4;\n    }\n}","title":"RemoveConfig 删除配置"},{"location":"/api/management/naming.html","text":"","title":"Naming Manager 名称管理服务"},{"location":"/api/management/naming.html#naming-manager-名称管理服务","text":"gRPC服务地址：/fusion.discoveryx.server.grpc.NamingManagerService REST URL前缀：/fusion/discoveryx/management/naming\nREST URL路径由 REST URL前缀 + 服务名组织，均使用 POST 方法的请求，JSON序例化格式。如查询服务列表接口访问地址为：POST /fusion/discoveryx/management/naming/ListService。Protobuf与JSON格式转换请参阅： JSON 说明。","title":"Naming Manager 名称管理服务"},{"location":"/api/management/naming.html#listservice-查询服务列表","text":"gRPC\n// 查询服务列表\nrpc ListService (fusion.discoveryx.server.protocol.ListService) returns (fusion.discoveryx.server.protocol.NamingResponse) {\n}\n请求\nmessage ListService {\n    string namespace = 1;\n    int32 page = 2;\n    int32 size = 3;\n    string service_name = 4;\n}\n响应\nmessage NamingResponse {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        ListedService listed_service = 3;\n        ServiceInfo service_info = 4;\n        fusion.discoveryx.model.Instance instance = 5;\n    }\n}\noneof的listed_service字段将返回匹配查询的服务列表：\nmessage ListedService {\n    repeated ServiceInfo service_infos = 1;\n}\nmessage ServiceInfo {\n    string namespace = 1;\n    string service_name = 2;\n    repeated fusion.discoveryx.model.Instance instances = 3;\n}\nInstance见 开放API#instance。","title":"ListService 查询服务列表"},{"location":"/api/management/naming.html#getservice-查询单个服务","text":"gRPC\n// 查询单个服务\nrpc GetService (fusion.discoveryx.server.protocol.GetService) returns (fusion.discoveryx.server.protocol.NamingResponse) {\n}\n请求\nmessage GetService {\n    string namespace = 1;\n    string service_name = 2;\n}\n响应\nmessage NamingResponse {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        ListedService listed_service = 3;\n        ServiceInfo service_info = 4;\n        fusion.discoveryx.model.Instance instance = 5;\n    }\n}\noneof的listed_service字段将返回匹配查询的服务列表：\nmessage ServiceInfo {\n    string namespace = 1;\n    string service_name = 2;\n    repeated fusion.discoveryx.model.Instance instances = 3;\n}","title":"GetService 查询单个服务"},{"location":"/api/management/naming.html#removeinstance-删除实例","text":"gRPC\n// 删除实例\nrpc RemoveInstance (fusion.discoveryx.model.InstanceRemove) returns (fusion.discoveryx.server.protocol.NamingResponse) {\n}\n请求\nmessage InstanceRemove {\n    string namespace = 1;\n    string service_name = 2;\n    string instance_id = 3;\n}\n响应\nmessage NamingResponse {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        ListedService listed_service = 3;\n        ServiceInfo service_info = 4;\n        fusion.discoveryx.model.Instance instance = 5;\n    }\n}","title":"RemoveInstance 删除实例"},{"location":"/api/management/naming.html#modifyinstance-编辑实例","text":"gRPC\n// 编辑实例\nrpc ModifyInstance (fusion.discoveryx.model.InstanceModify) returns (fusion.discoveryx.server.protocol.NamingResponse) {\n}\n请求\nmessage InstanceModify {\n    string namespace = 1;\n    string service_name = 2;\n    string instance_id = 3;\n    google.protobuf.StringValue group_name = 4;\n    google.protobuf.StringValue ip = 5;\n    google.protobuf.Int32Value port = 6;\n    // instance weight\n    google.protobuf.DoubleValue weight = 7;\n    // instance health status\n    google.protobuf.BoolValue health = 8;\n    // If instance is enabled to accept request\n    google.protobuf.BoolValue enable = 9;\n    // user extended attributes\n    map<string, string> metadata = 10;\n    // true：replace old metadata, false: merge old metadata\n    bool replace_metadata = 11;\n}\n响应\nmessage NamingResponse {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        ListedService listed_service = 3;\n        ServiceInfo service_info = 4;\n        fusion.discoveryx.model.Instance instance = 5;\n    }\n}\noneof的instance将返回编辑后的实例信息，Instance见 开放API#instance。","title":"ModifyInstance 编辑实例"},{"location":"/api/management/grpc.html","text":"","title":"gRPC服务描述定义文件"},{"location":"/api/management/grpc.html#grpc服务描述定义文件","text":"syntax = \"proto3\";\npackage fusion.discoveryx.server.grpc;\n\nimport \"scalapb/scalapb.proto\";\nimport \"fusion/discoveryx/model/discoveryx.proto\";\nimport \"fusion/discoveryx/server/protocol/config.proto\";\nimport \"fusion/discoveryx/server/protocol/naming.proto\";\n\noption (scalapb.options) = {\n  collection_type: \"scala.collection.immutable.Seq\"\n};\n\nservice ConfigManagerService {\n    // 查询配置列表（不返回配置内容）\n    rpc ListConfig (fusion.discoveryx.server.protocol.ListConfig) returns (fusion.discoveryx.server.protocol.ConfigResponse) {\n    }\n\n    // 查询单个配置\n    rpc GetConfig (fusion.discoveryx.model.ConfigGet) returns (fusion.discoveryx.server.protocol.ConfigResponse) {\n    }\n\n    // 发布配置\n    rpc PublishConfig (fusion.discoveryx.model.ConfigItem) returns (fusion.discoveryx.server.protocol.ConfigResponse) {\n    }\n\n    // 删除配置\n    rpc RemoveConfig (fusion.discoveryx.model.ConfigRemove) returns (fusion.discoveryx.server.protocol.ConfigResponse) {\n    }\n}\n\nservice NamingManagerService {\n    // 查询服务列表\n    rpc ListService (fusion.discoveryx.server.protocol.ListService) returns (fusion.discoveryx.server.protocol.NamingResponse) {\n    }\n\n    // 查询单个服务\n    rpc GetService (fusion.discoveryx.server.protocol.GetService) returns (fusion.discoveryx.server.protocol.NamingResponse) {\n    }\n\n    // 创建实例\n    rpc CreateInstance (fusion.discoveryx.model.InstanceRegister) returns (fusion.discoveryx.server.protocol.NamingResponse) {\n    }\n\n    // 删除实例\n    rpc RemoveInstance (fusion.discoveryx.model.InstanceRemove) returns (fusion.discoveryx.server.protocol.NamingResponse) {\n    }\n\n    // 编辑实例\n    rpc ModifyInstance (fusion.discoveryx.model.InstanceModify) returns (fusion.discoveryx.server.protocol.NamingResponse) {\n    }\n}","title":"gRPC服务描述定义文件"},{"location":"/api/json.html","text":"","title":"JSON 说明"},{"location":"/api/json.html#json-说明","text":"","title":"JSON 说明"},{"location":"/api/json.html#protobuf-json转换说明","text":"REST API使用JSON作为序例化，由Protobuf数据自动序例化为JSON（或反之）。\nProtobuf里使用下划线定义的字段在序例化为JSON时将自动转换成驼峰格式； 当某个字段未设置时，将使用Protobuf里定义的默认值。也就是说客户在提交请求时不需要每个字段都设置，同时，服务端返回结果时未设置的字段将使用默认值返回； oneof类型字段在序例化为JSON时将不包含外层的包裹，将直接返回设置的字段。","title":"Protobuf、JSON转换说明"},{"location":"/api/json.html#示例","text":"protobuf\nmessage NamingResponse {\n    int32 status = 1;\n    string message = 2;\n    oneof data {\n        ListedService listed_service = 3;\n        ServiceInfo service_info = 4;\n        fusion.discoveryx.model.Instance instance = 5;\n    }\n}\njson\n{\n    \"status\":200,\n    \"message\":\"\",\n    \"serviceInfo\":{\n        \"namespace\":\"namespace\",\n        \"serviceName\":\"fusion-discoveryx\",\n        \"instances\":[\n            {\n                \"instanceId\":\"b9d8b5fc218c5a4852c389fb220288022cb62ae4\",\n                \"namespace\":\"namespace\",\n                \"serviceName\":\"fusion-discoveryx\",\n                \"groupName\":\"default\",\n                \"ip\":\"127.0.0.1\",\n                \"port\":8000,\n                \"weight\":0,\n                \"healthy\":true,\n                \"enabled\":false,\n                \"metadata\":{\n\n                }\n            }\n        ]\n    }\n}","title":"示例"},{"location":"/releases.html","text":"","title":"版本"},{"location":"/releases.html#版本","text":"","title":"版本"},{"location":"/api/open-api.html","text":"","title":"开放API"},{"location":"/api/open-api.html#开放api","text":"","title":"开放API"}]}